@model LoginViewModel

@{
    ViewData["Title"] = "Logowanie";
}

<div class="d-flex justify-content-center mt-5">
    <div class="col-md-6 bg-dark p-5 rounded shadow border border-secondary-subtle">
        <h2 class="mb-4 text-white">Zaloguj się</h2>

        <form asp-action="Login" method="post">
            @if (ViewData.ModelState.TryGetValue(string.Empty, out var entry) && entry.Errors.Count > 0)
            {
                <div class="alert alert-danger">
                    @foreach (var error in entry.Errors)
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

            <div class="form-group mb-3">
                <label asp-for="Email" class="text-light"></label>
                <input asp-for="Email" class="form-control bg-light text-dark" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Password" class="text-light">Hasło</label>
                <input asp-for="Password" type="password" class="form-control bg-light text-dark" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="form-group form-check mb-4">
                <input asp-for="RememberMe" class="form-check-input" />
                <label asp-for="RememberMe" class="form-check-label text-light">Zapamiętaj mnie</label>
            </div>

            <button type="submit" class="btn btn-outline-light border-white w-100">Zaloguj się</button>
        </form>

        <div class="mt-3 text-light">
            Nie masz konta?
            <a asp-controller="Account" asp-action="Register" class="link-light text-decoration-underline">Rejestracja</a>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
