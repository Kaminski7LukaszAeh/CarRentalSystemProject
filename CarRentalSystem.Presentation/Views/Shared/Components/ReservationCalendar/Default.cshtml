@model ReservationCalendarViewModel
@{
    var reservedJson = System.Text.Json.JsonSerializer.Serialize(
        Model.ReservedDates.Select(d => d.ToString("yyyy-MM-dd"))
    );
}
<div class="mt-4">
    <form asp-controller="Reservations" asp-action="CreateReservation" method="post">
        <input type="hidden" name="VehicleId" value="@Model.VehicleId" />
        <input type="hidden" name="StartDate" id="startDateHidden" />
        <input type="hidden" name="EndDate" id="endDateHidden" />
        <input type="hidden" name="TotalCost" id="totalCostHidden" />

        <div class="form-group">
            <label>Zakres dat</label>
            <input id="reservationRange" class="form-control" placeholder="Wybierz zakres dat" />
        </div>

        <div class="row mt-3">
            <div class="col-md-6">
                <label for="StartTime">Godzina odbioru</label>
                <select class="form-control" id="StartTime" name="StartTime"></select>
            </div>
            <div class="col-md-6">
                <label for="EndTime">Godzina zwrotu</label>
                <select class="form-control" id="EndTime" name="EndTime"></select>
            </div>
        </div>

        <div class="my-4 p-4 bg-light border rounded text-center">
            <h5 class="text-muted mb-2">Łączny koszt</h5>
            <p id="totalCostDisplay" class="display-5 fw-bold text-success">0,00 zł</p>
        </div>

        <div class="d-flex justify-content-center gap-3">
            <button type="submit" name="payNow" value="true" class="btn btn-success" disabled>Zapłać teraz</button>
            <button type="submit" name="payNow" value="false" class="btn btn-secondary" disabled>Zapłać później</button>

        </div>
    </form>

    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        const dailyRate = @Model.DailyRate;
        const reservedDates = @Html.Raw(reservedJson);

        function populateTimeDropdown(id) {
            const select = document.getElementById(id);
            for (let hour = 0; hour < 24; hour++) {
                for (let minute = 0; minute < 60; minute += 30) {
                    const h = hour.toString().padStart(2, '0');
                    const m = minute.toString().padStart(2, '0');
                    const option = document.createElement("option");
                    option.value = `${h}:${m}`;
                    option.textContent = `${h}:${m}`;
                    select.appendChild(option);
                }
            }
        }

        function formatDateTime(date, timeStr) {
            const [hours, minutes] = timeStr.split(":");
            const dt = new Date(date);
            dt.setHours(parseInt(hours), parseInt(minutes));
            return dt;
        }

        function formatDateLocal(date, timeStr) {
            const [hours, minutes] = timeStr.split(":");
            const year = date.getFullYear();
            const month = (date.getMonth() + 1).toString().padStart(2, '0');
            const day = date.getDate().toString().padStart(2, '0');
            return `${year}-${month}-${day}T${hours}:${minutes}`;
        }

        function validateFormAndToggleButtons() {
            const start = document.getElementById("startDateHidden").value;
            const end = document.getElementById("endDateHidden").value;
            const startTime = document.getElementById("StartTime").value;
            const endTime = document.getElementById("EndTime").value;
            const buttons = document.querySelectorAll("button[type='submit']");

            const isValid = start && end && startTime && endTime;

            buttons.forEach(btn => btn.disabled = !isValid);
        }

        function updateDateTimeFields(dates) {
            const startTime = document.getElementById("StartTime").value;
            const endTime = document.getElementById("EndTime").value;

            if (dates.length === 2 && startTime && endTime) {
                const startDateTime = formatDateTime(dates[0], startTime);
                const endDateTime = formatDateTime(dates[1], endTime);

                const diffTime = endDateTime - startDateTime;
                const days = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

                const total = days * dailyRate;
                document.getElementById("totalCostDisplay").textContent = total.toLocaleString("pl-PL", {
                    style: "currency",
                    currency: "PLN"
                });
                document.getElementById("totalCostHidden").value = total.toFixed(2);

                document.getElementById("startDateHidden").value = formatDateLocal(dates[0], startTime);
                document.getElementById("endDateHidden").value = formatDateLocal(dates[1], endTime);
            } else {
                document.getElementById("totalCostDisplay").textContent = "0,00 zł";
                document.getElementById("totalCostHidden").value = "0.00";
                document.getElementById("startDateHidden").value = "";
                document.getElementById("endDateHidden").value = "";
            }

            validateFormAndToggleButtons();
        }

        document.addEventListener("DOMContentLoaded", () => {
            populateTimeDropdown("StartTime");
            populateTimeDropdown("EndTime");

            flatpickr("#reservationRange", {
                mode: "range",
                dateFormat: "Y-m-d",
                disable: reservedDates.map(d => new Date(d)),
                minDate: "today",
                onDayCreate: function (dObj, dStr, fp, dayElem) {
                    const date = dayElem.dateObj.toISOString().split('T')[0];
                    if (reservedDates.includes(date)) {
                        dayElem.classList.add("flatpickr-disabled");
                        dayElem.style.background = "#f88";
                        dayElem.title = "Niedostępne";
                    }
                },
                onChange: function (selectedDates) {
                    updateDateTimeFields(selectedDates);
                }
            });

            document.getElementById("StartTime").addEventListener("change", () => {
                const picker = document.getElementById("reservationRange")._flatpickr;
                updateDateTimeFields(picker.selectedDates);
            });

            document.getElementById("EndTime").addEventListener("change", () => {
                const picker = document.getElementById("reservationRange")._flatpickr;
                updateDateTimeFields(picker.selectedDates);
            });

            validateFormAndToggleButtons();
        });
    </script>


